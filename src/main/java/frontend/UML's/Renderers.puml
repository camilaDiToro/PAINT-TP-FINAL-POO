@startuml
'https://plantuml.com/sequence-diagram

package Renderers{

interface RendererCreator<F extends MovableDrawing> {
    Render<F> create(Point pt1, Point pt2)
}

abstract class Render<F extends MovableDrawing> {
    -FigureStyle currentFigureStyle
    -F movableDrawing

   +Render(F movableDrawing, FigureStyle fg)
   +abstract void render(GraphicsContext graphicsContext)
   +F getFigure()
   +void setStrokeColor(Color color)
   +void setBgColor(Color color)
   +void setStrokeWidth(double strokeWidth)
   +FigureStyle getStyle()
}

class RectangleRender<F extends Rectangle> extends Render {

    +RectangleRender(F rectangle, FigureStyle fg)
    +void render( GraphicsContext  gc )
}

Render *-- FigureStyle

class LineRender extends Render{
    +LineRender(Line line, FigureStyle fg)
    +void render(GraphicsContext gc)
}

class RoundedFigureRender<F extends RoundedFigure> extends Render {
    + RoundedFigureRender(F roundedFigure, FigureStyle fg)
    + void render(GraphicsContext gc)
}

class FigureStyle {

    +{static} Color lineColorSelected = Color.RED;
    +{static} Color lineColorDefault = Color.BLACK;
    +{static} final Color fillColorDefault = Color.YELLOW;
    +{static} final double strokeWidthDefault = 2;
    - Color bgColor;
    - Color strokeColor;
    - double strokeWidth;


    + FigureStyle(Color bgColor, Color strokeColor, double strokeWidth)
    + void setBgColor(Color bgColor)
    + void setStrokeColor(Color strokeColor)
    + void setStrokeWidth(double strokeWidth)
    + Color getBgColor()
    + Color getStrokeColor()
    + double getStrokeWidth()
}
}
@enduml